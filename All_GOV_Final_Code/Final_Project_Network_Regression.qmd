---
title: "Final_Project_Network_Regression"
format: html
editor: visual
---

```{r, warning=F, message=F}
library(rio)
library(igraph)
library(dplyr)
library(readr)
```

```{r, warning=F, message=F}

#Loading all the CA House and Senate data

#Each csv file in Edge_Lists represents 1 network. The first two columns are the sender/receiver identified with their "EID" (the identifier provided by NIMP). The third column is used to identify what threshold the edge was
  
CA_2011_2012_Senate_edges <- read_csv("Edgelist/CA-2011-2012-Senate.csv")
CA_2011_2012_Senate <- read_csv("Metadata/CA-2011-2012-Senate.csv")

CA_2013_2014_Senate_edges <- read_csv("Edgelist/CA-2013-2014-Senate.csv")
CA_2013_2014_Senate <- read_csv("Metadata/CA-2013-2014-Senate.csv")

CA_2015_2016_Senate_edges <- read_csv("Edgelist/CA-2015-2016-Senate.csv")
CA_2015_2016_Senate <- read_csv("Metadata/CA-2015-2016-Senate.csv")

CA_2011_2012_House <- read_csv("Metadata/CA-2011-2012-House.csv")
CA_2011_2012_House_edges <- read_csv("Edgelist/CA-2011-2012-House.csv")

CA_2013_2014_House <- read_csv("Metadata/CA-2013-2014-House.csv")
CA_2013_2014_House_edges <- read_csv("Edgelist/CA-2013-2014-House.csv")

CA_2015_2016_House <- read_csv("Metadata/CA-2015-2016-House.csv")
CA_2015_2016_House_edges <- read_csv("Edgelist/CA-2015-2016-House.csv")
```

```{r, warning=F, message=F}

regression_data <- function(nodes, edges) {
  nodes_2 <- nodes %>%
    filter(CatCodeGroup == "Health" | CatCodeGroup == "Labor" | CatCodeGroup == "Agriculture" | CatCodeGroup == "General Business" | CatCodeGroup == "Finance, Insurance & Real Estate") %>%
    mutate(party_node_2 = EID) %>%
    mutate(party_group_2 = CatCodeGroup) %>%
    mutate(Total_2 = Total) %>% 
    mutate(PerDem_2 = PerDem) %>%
    mutate(PerRep_2 = PerRep) %>%
    select(party_node_2, party_group_2, Total_2, PerDem_2, PerRep_2)
  
   nodes_1 <- nodes %>%
     filter(CatCodeGroup == "Health" | CatCodeGroup == "Labor" | CatCodeGroup == "Agriculture" | CatCodeGroup == "General Business" | CatCodeGroup == "Finance, Insurance & Real Estate") %>%
     mutate(party_node_1 = EID) %>%
     mutate(party_group_1 = CatCodeGroup) %>%
     mutate(Total_1 = Total) %>% 
     mutate(PerDem_1 = PerDem) %>%
     mutate(PerRep_1 = PerRep) %>%
     select(EID, party_node_1, party_group_1, Total_1, PerDem_1, PerRep_1) %>%
     inner_join(edges, by = c("EID" = "node_1")) %>%
     inner_join(nodes_2, by = c("node_2" = "party_node_2")) %>%
     select(-EID, -edge) %>%
     mutate(party_node_2 = node_2) %>%
     mutate(party_1_group = party_group_1) %>%
     mutate(party_2_group = party_group_2) %>%
     mutate(party_1_total = Total_1) %>%
     mutate(party_2_total = Total_2) %>%
     mutate(dem_diff = abs(PerDem_1 - PerDem_2)) %>%
     mutate(rep_diff = abs(PerRep_1 - PerRep_2)) %>%
     select(-party_group_1, -party_group_2, -node_2, -Total_1, -Total_2, -PerDem_1, -PerRep_1, -PerDem_2, -PerRep_2) %>%
    #https://www.statology.org/r-convert-true-false-to-1-0/
     mutate(same = as.integer(as.logical(party_1_group == party_2_group))) %>%
     mutate(total_diff = abs(party_1_total - party_2_total))
  return(nodes_1)
}
```

```{r, warning=F, message=F}

#First step for ERGM with all House and Senate years prepared

CA_11_12_House <- graph.data.frame(regression_data(CA_2011_2012_House, CA_2011_2012_House_edges))
CA_11_12_House_sim <- get.adjacency(CA_11_12_House, sparse = FALSE, attr = 'same')
CA_11_12_House_total_diff <- get.adjacency(CA_11_12_House, sparse = FALSE, attr = 'total_diff')
CA_11_12_House_per_dem <- get.adjacency(CA_11_12_House, sparse = FALSE, attr = 'dem_diff')
CA_11_12_House_per_rep <- get.adjacency(CA_11_12_House, sparse = FALSE, attr = 'rep_diff')
#our dependent variable is the ties between every donor
CA_11_12_House_ties <- as.matrix(get.adjacency(CA_11_12_House))

CA_13_14_House <- graph.data.frame(regression_data(CA_2013_2014_House, CA_2013_2014_House_edges))
CA_13_14_House_sim <- get.adjacency(CA_13_14_House, sparse = FALSE, attr = 'same')
CA_13_14_House_total_diff <- get.adjacency(CA_13_14_House, sparse = FALSE, attr = 'total_diff')
CA_13_14_House_per_dem <- get.adjacency(CA_13_14_House, sparse = FALSE, attr = 'dem_diff')
CA_13_14_House_per_rep <- get.adjacency(CA_13_14_House, sparse = FALSE, attr = 'rep_diff')
CA_13_14_House_ties <- as.matrix(get.adjacency(CA_13_14_House))

CA_15_16_House <- graph.data.frame(regression_data(CA_2015_2016_House, CA_2015_2016_House_edges))
CA_15_16_House_sim <- get.adjacency(CA_15_16_House, sparse = FALSE, attr = 'same')
CA_15_16_House_total_diff <- get.adjacency(CA_15_16_House, sparse = FALSE, attr = 'total_diff')
CA_15_16_House_per_dem <- get.adjacency(CA_15_16_House, sparse = FALSE, attr = 'dem_diff')
CA_15_16_House_per_rep <- get.adjacency(CA_15_16_House, sparse = FALSE, attr = 'rep_diff')
CA_15_16_House_ties <- as.matrix(get.adjacency(CA_15_16_House))

CA_11_12_Senate <- graph.data.frame(regression_data(CA_2011_2012_Senate, CA_2011_2012_Senate_edges))
CA_11_12_Senate_sim <- get.adjacency(CA_11_12_Senate, sparse = FALSE, attr = 'same')
CA_11_12_Senate_total_diff <- get.adjacency(CA_11_12_Senate, sparse = FALSE, attr = 'total_diff')
CA_11_12_Senate_per_dem <- get.adjacency(CA_11_12_Senate, sparse = FALSE, attr = 'dem_diff')
CA_11_12_Senate_per_rep <- get.adjacency(CA_11_12_Senate, sparse = FALSE, attr = 'rep_diff')
CA_11_12_Senate_ties <- as.matrix(get.adjacency(CA_11_12_Senate))

CA_13_14_Senate <- graph.data.frame(regression_data(CA_2013_2014_Senate, CA_2013_2014_Senate_edges))
CA_13_14_Senate_sim <- get.adjacency(CA_13_14_Senate, sparse = FALSE, attr = 'same')
CA_13_14_Senate_total_diff <- get.adjacency(CA_13_14_Senate, sparse = FALSE, attr = 'total_diff')
CA_13_14_Senate_per_dem <- get.adjacency(CA_13_14_Senate, sparse = FALSE, attr = 'dem_diff')
CA_13_14_Senate_per_rep <- get.adjacency(CA_13_14_Senate, sparse = FALSE, attr = 'rep_diff')
CA_13_14_Senate_ties <- as.matrix(get.adjacency(CA_13_14_Senate))

CA_15_16_Senate <- graph.data.frame(regression_data(CA_2015_2016_Senate, CA_2015_2016_Senate_edges))
CA_15_16_Senate_sim <- get.adjacency(CA_15_16_Senate, sparse = FALSE, attr = 'same')
CA_15_16_Senate_total_diff <- get.adjacency(CA_15_16_Senate, sparse = FALSE, attr = 'total_diff')
CA_15_16_Senate_per_dem <- get.adjacency(CA_15_16_Senate, sparse = FALSE, attr = 'dem_diff')
CA_15_16_Senate_per_rep <- get.adjacency(CA_15_16_Senate, sparse = FALSE, attr = 'rep_diff')
CA_15_16_Senate_ties <- as.matrix(get.adjacency(CA_15_16_Senate))

```

```{r, warning=F, message=F}
#Detaching igraph to prepare for final step of our regression model
detach(package:igraph)
library(statnet)
```

```{r, warning=F, message=F}

#If they are of the same groups that there is a 48% chance higher that a tie will exist between two donors 
CA_11_12_House_matrices <- array(NA, c(4, length(CA_11_12_House_sim[1,]), length(CA_11_12_House_sim[1,]))) 

CA_11_12_House_matrices[1,,] <- CA_11_12_House_sim
CA_11_12_House_matrices[2,,] <- CA_11_12_House_total_diff
CA_11_12_House_matrices[3,,] <- CA_11_12_House_per_dem
CA_11_12_House_matrices[4,,] <- CA_11_12_House_per_rep

CA_11_12_House_lm <- netlm(CA_11_12_House_ties, CA_11_12_House_matrices, reps=100)

CA_11_12_House_model <- list()
CA_11_12_House_model <- summary(CA_11_12_House_lm)
CA_11_12_House_model$names <- c("Intercept", "Same Group", "Total Contributions Difference", "Per Democratic Difference", "Per Republican Difference")

CA_11_12_House_model$coefficients = round(CA_11_12_House_model$coefficients, 2)
CA_11_12_House_model
```

```{r, warning=F, message=F}

CA_13_14_House_matrices <- array(NA, c(4, length(CA_13_14_House_sim[1,]), length(CA_13_14_House_sim[1,]))) 

CA_13_14_House_matrices[1,,] <- CA_13_14_House_sim
CA_13_14_House_matrices[2,,] <- CA_13_14_House_total_diff
CA_13_14_House_matrices[3,,] <- CA_13_14_House_per_dem
CA_13_14_House_matrices[4,,] <- CA_13_14_House_per_rep

CA_13_14_House_lm <- netlm(CA_13_14_House_ties, CA_13_14_House_matrices, reps=100)

CA_13_14_House_model <- list()
CA_13_14_House_model <- summary(CA_13_14_House_lm)
CA_13_14_House_model$names <- c("Intercept", "Same Group", "Total Contributions Difference", "Per Democratic Difference", "Per Republican Difference")

CA_13_14_House_model$coefficients = round(CA_13_14_House_model$coefficients, 2)
CA_13_14_House_model
```

```{r, warning=F, message=F}

CA_15_16_House_matrices <- array(NA, c(4, length(CA_15_16_House_sim[1,]), length(CA_15_16_House_sim[1,]))) 

CA_15_16_House_matrices[1,,] <- CA_15_16_House_sim
CA_15_16_House_matrices[2,,] <- CA_15_16_House_total_diff
CA_15_16_House_matrices[3,,] <- CA_15_16_House_per_dem
CA_15_16_House_matrices[4,,] <- CA_15_16_House_per_rep

CA_15_16_House_lm <- netlm(CA_15_16_House_ties, CA_15_16_House_matrices, reps=100)

CA_15_16_House_model <- list()
CA_15_16_House_model <- summary(CA_15_16_House_lm)
CA_15_16_House_model$names <- c("Intercept", "Same Group", "Total Contributions Difference", "Per Democratic Difference", "Per Republican Difference")

CA_15_16_House_model$coefficients = round(CA_15_16_House_model$coefficients, 2)
CA_15_16_House_model
```

```{r, warning=F, message=F}

CA_11_12_Senate_matrices <- array(NA, c(4, length(CA_11_12_Senate_sim[1,]), length(CA_11_12_Senate_sim[1,]))) 

CA_11_12_Senate_matrices[1,,] <- CA_11_12_Senate_sim
CA_11_12_Senate_matrices[2,,] <- CA_11_12_Senate_total_diff
CA_11_12_Senate_matrices[3,,] <- CA_11_12_Senate_per_dem
CA_11_12_Senate_matrices[4,,] <- CA_11_12_Senate_per_rep

CA_11_12_Senate_lm <- netlm(CA_11_12_Senate_ties, CA_11_12_Senate_matrices, reps=100)

CA_11_12_Senate_model <- list()
CA_11_12_Senate_model <- summary(CA_11_12_Senate_lm)
CA_11_12_Senate_model$names <- c("Intercept", "Same Group", "Total Contributions Difference", "Per Democratic Difference", "Per Republican Difference")

CA_11_12_Senate_model$coefficients = round(CA_11_12_Senate_model$coefficients, 2)
CA_11_12_Senate_model
```

```{r, warning=F, message=F}

CA_13_14_Senate_matrices <- array(NA, c(4, length(CA_13_14_Senate_sim[1,]), length(CA_13_14_Senate_sim[1,]))) 

CA_13_14_Senate_matrices[1,,] <- CA_13_14_Senate_sim
CA_13_14_Senate_matrices[2,,] <- CA_13_14_Senate_total_diff
CA_13_14_Senate_matrices[3,,] <- CA_13_14_Senate_per_dem
CA_13_14_Senate_matrices[4,,] <- CA_13_14_Senate_per_rep

CA_13_14_Senate_lm <- netlm(CA_13_14_Senate_ties, CA_13_14_Senate_matrices, reps=100)

CA_13_14_Senate_model <- list()
CA_13_14_Senate_model <- summary(CA_13_14_Senate_lm)
CA_13_14_Senate_model$names <- c("Intercept", "Same Group", "Total Contributions Difference", "Per Democratic Difference", "Per Republican Difference")

CA_13_14_Senate_model$coefficients = round(CA_13_14_Senate_model$coefficients, 2)
CA_13_14_Senate_model
```

```{r, warning=F, message=F}

CA_15_16_Senate_matrices <- array(NA, c(4, length(CA_15_16_Senate_sim[1,]), length(CA_15_16_Senate_sim[1,]))) 

CA_15_16_Senate_matrices[1,,] <- CA_15_16_Senate_sim
CA_15_16_Senate_matrices[2,,] <- CA_15_16_Senate_total_diff
CA_15_16_Senate_matrices[3,,] <- CA_15_16_Senate_per_dem
CA_15_16_Senate_matrices[4,,] <- CA_15_16_Senate_per_rep

CA_15_16_Senate_lm <- netlm(CA_15_16_Senate_ties, CA_15_16_Senate_matrices, reps=100)

CA_15_16_Senate_model <- list()
CA_15_16_Senate_model <- summary(CA_15_16_Senate_lm)
CA_15_16_Senate_model$names <- c("Intercept", "Same Group", "Total Contributions Difference", "Per Democratic Difference", "Per Republican Difference")

CA_15_16_Senate_model$coefficients = round(CA_15_16_Senate_model$coefficients, 2)
CA_15_16_Senate_model
```

References Consulted

Reuning, Kevin. *Election Donation Networks*. Harvard Dataverse, 4 June 2020, https://dataverse.harvard.edu/dataset.xhtml?persistentId=doi%3A10.7910%2FDVN%2FYMDFPW.

Zach. "How to Convert TRUE and FALSE to 1 and 0 in R." *Statology*, 9 Sept. 2022, https://www.statology.org/r-convert-true-false-to-1-0/.
